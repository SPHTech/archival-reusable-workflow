name: 'Trivy Aqua Security Scan for Docker and ECR Reusable workflow'

on:
  workflow_call:
    inputs:
      docker_file:
        description: Name of the dockerfile
        type: string
        default: ./Dockerfile
        required: false
      docker_tag_name:
        description: Provide the docker tag names
        type: string
        default: ''
        required: false
      docker_tag_version:
         description: Provide the docker tag names
         type: string
         default: 'latest'
         required: false
      docker_build_args:
        description: "Multi Line separated list of build args with key value"
        type: string
        required: false
        default: ''
      docker_no_cache:
        description: "Docker No cache on build"
        type: boolean
        required: false
        default: false
      ecr_image_name:
        description: ECR repo image to scan
        type: string
        required: false
      ecr_tag_version:
        description: ECR repo tag version to scan
        type: string
        required: false
        default: 'latest'
      deploy_env:
        description: "The environment variable for the workflow"
        type: string
        required: false
        default: 'dev'
      aws_account_id:
        description: "AWS account ID"
        type: string
        required: false
        default: ''
      aws_account_region:
        description: "AWS account region"
        type: string
        required: false
        default: ''
      aws_iam_role_arn:
       description: "AWS ARN IAM Role"
       type: string
       required: false
       default: ''
      trivy_format:
        description: "Trivy format to log out the scan"
        type: string
        default: 'table'
        required: false
      upload_to_codeql:
        description: "Upload to CodeQL"
        type: boolean
        default: false
        required: false
      scan_type:
        description: "Scan Type to be scanned"
        type: string
        default: 'docker'
        required: false
      context:
        description: "Context Path directory of the project"
        type: string
        required: false
        default: '.'
      scan_reference:
        description: "Scan reference(e.g. /github/workspace/ or .)"
        type: string
        default: "/github/workspace/"
        required: false
      skip_directories:
        description: "Comma separated list of directories where traversal is skipped"
        type: string
        default: ""
        required: false
      timeout:
        description: "Scan timeout duration"
        type: string
        required: false
        default: 5m0s
      runner_label:
        description: "Add runners for the GHA"
        default: '["self-hosted","platform-eng-ent"]'
        type: string
        required: false
    secrets:
      OAUTH_TOKEN:
        description: Github Token for accessing other dependency private repo
        required: false

jobs:
  trivy-scan:
    runs-on:
      ${{ fromJSON(inputs.runner_label) }}
    environment: ${{ inputs.deploy_env }}
    permissions:
      contents: read
      id-token: write
    steps:
    - name: ⏳ Checkout code
      uses: actions/checkout@v4

    - name: ⚙ ️Set Variable
      id: set-vars
      run: |
        if [ "${{ inputs.docker_tag_name }}" != "" ]; then
          echo "file_output=trivy-results-docker.sarif" >> $GITHUB_OUTPUT
        elif [ "${{ inputs.ecr_image_name }}" != "" ] &&  [ "${{ inputs.aws_account_id }}" != "" ]; then
          echo "file_output=trivy-results-ecr.sarif" >> $GITHUB_OUTPUT
        else
          echo "file_output=trivy-results-fs.sarif" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: 🔩 Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-skip-session-tagging: true
        role-to-assume: ${{ inputs.aws_iam_role_arn }}
        role-session-name: gh-actions
        aws-region: ${{ inputs.aws_account_region }}
      if: ${{ (inputs.docker_tag_name =='') && (inputs.ecr_image_name !='') }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      if: contains('self-hosted', ${{ inputs.runner_label }})

    - name: 🚀 Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ inputs.aws_account_id }}.dkr.ecr.${{ inputs.aws_account_region }}.amazonaws.com/${{ inputs.ecr_image_name}}:${{ inputs.ecr_tag_version }}
        format: ${{ inputs.trivy_format }}
        timeout: ${{ inputs.timeout }}
        output: ${{ inputs.upload_to_codeql && steps.set-vars.outputs.file_output || '' }}
      if: ${{ (inputs.docker_tag_name =='') && (inputs.ecr_image_name !='') && (inputs.aws_account_id != '') }}

    - name: 🛠️ Docker Build and Push
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.docker_file }}
        tags:  ${{ inputs.docker_tag_name }}:${{ inputs.docker_tag_version }}
        no-cache: ${{ inputs.docker_no_cache }}
        build-args: |
          ${{ inputs.docker_build_args }}
          GITHUB_OAUTH_TOKEN=${{ secrets.OAUTH_TOKEN }}
        push: false
      if: ${{ inputs.docker_tag_name !='' }}

    - name: 🚀 Run Trivy vulnerability scanner for docker images
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ inputs.docker_tag_name }}:${{ inputs.docker_tag_version }}
        timeout: ${{ inputs.timeout }}
        format: ${{ inputs.trivy_format }}
        output: ${{ inputs.upload_to_codeql && steps.set-vars.outputs.file_output || '' }}
        ignore-unfixed: false
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH,MEDIUM'
      if: ${{ inputs.docker_tag_name !='' }}

    - name: 🚀 Run Trivy vulnerability scanner in repo mode
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        timeout: ${{ inputs.timeout }}
        scan-ref: ${{ inputs.scan_reference }}
        ignore-unfixed: false
        format: ${{ inputs.trivy_format }}
        output: ${{ inputs.upload_to_codeql && steps.set-vars.outputs.file_output || '' }}
        severity: 'HIGH,CRITICAL,MEDIUM'
        skip-dirs: ${{ inputs.skip_directories }}
      if: ${{ inputs.scan_type == 'fs' }}

    - name: 📁 Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ steps.set-vars.outputs.file_output }}
      if: ${{ inputs.upload_to_codeql }}
