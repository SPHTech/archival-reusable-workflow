name: 'Deploy to ECS'

on:
  workflow_call:
    inputs:
      iam_role_arn:
        description: "aws iam role arn for ecr repository access"
        type: string
        required: true
      aws_account_id:
        description: "AWS account Id"
        type: string
        required: true
      aws_account_region:
        description: "AWS account region"
        type: string
        required: true
      ecr_repository:
        description: "ECR repository name"
        type: string
        required: true
      ecs_task_def:
        description: "Task Definition name"
        type: string
        required: true
      ecs_container:
        description: "ECS Container Name"
        type: string
        required: true
      ecs_service:
        description: "ECS Service Name"
        type: string
        required: true
      ecs_cluster:
        description: "ECS Cluster Name"
        type: string
        required: true
      ecs_wait_for_service_stability:
        description: "Source context - path location to docker build"
        type: boolean
        default: true
        required: false
      runner_label:
        description: "Add runners for the GHA"
        default: '["self-hosted","platform-eng-ent"]'
        type: string
        required: false
      dx_service_name:
        description: "Name of the service to register deployment to DX"
        required: false
        type: string
      dx_product_name:
        description: "Name of the product to register deployment to DX"
        required: false
        type: string
      dx_base_url:
        description: "DX base URL"
        required: false
        type: string
      environment:
        description: "Deployment Environment"
        required: false
        type: string
      dx_app_category:
        description: "DX app category"
        required: false
        type: string
      need_to_register_deployment_to_dx:
        description: "Is it needed to register the deployment to DX"
        required: false
        default: false
        type: boolean
    secrets:
      DX_API_TOKEN:
        description: "DX API Token"
        required: false

jobs:
  deploy-to-ecs:
    name: ðŸš€ Deploy to ECS
    runs-on:
      ${{ fromJSON(inputs.runner_label) }}
    permissions:
      contents: read
      id-token: write
    steps:
    - name: ðŸ”© Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-skip-session-tagging: true
        role-to-assume: ${{ inputs.iam_role_arn }}
        role-session-name: gh-actions
        aws-region: ${{ inputs.aws_account_region }}

    - name: Install Python for installing AWS CLI
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
      if: contains('self-hosted', ${{ inputs.runner_label }})

    - name: Install AWS CLI
      run: |
        python -m pip install --upgrade pip
        pip install awscli
      if: contains('self-hosted', ${{ inputs.runner_label }})

    - name: ðŸ“¥ Download task definition
      run: aws ecs describe-task-definition --task-definition ${{ inputs.ecs_task_def }} --query taskDefinition > task-definition.json

    - name: ðŸ’¾ Set image tag
      run: echo "IMAGE_TAG=${GITHUB_SHA::8}" >> "${GITHUB_ENV}"

    - name: ðŸª£ Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ./task-definition.json
        container-name: ${{ inputs.ecs_container }}
        image: ${{ inputs.aws_account_id }}.dkr.ecr.ap-southeast-1.amazonaws.com/${{ inputs.ecr_repository }}:${{ env.IMAGE_TAG }}

    - name: ðŸš€ Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ inputs.ecs_service }}
        cluster:  ${{ inputs.ecs_cluster }}
        wait-for-service-stability: ${{ inputs.ecs_wait_for_service_stability }}

  register_deploy_dx:
    if: ${{ success() || failure() }} # ensures this job runs even on failure
    needs: [deploy-to-ecs]
    runs-on:
      - self-hosted
      - platform-eng-ent
    steps:
      - name: Register deployment
        uses: SPHTech-Platform/deploy-actions/register_deploy_dx@v2
        with:
          dx_base_url: ${{ inputs.dx_base_url }}
          dx_api_token: ${{ secrets.DX_API_TOKEN }}
          service: ${{ inputs.dx_service_name }}
          env: ${{ inputs.environment }}
          product_name: ${{ inputs.dx_product_name }}
          app_category: ${{ inputs.dx_app_category }}
        if: ${{ inputs.need_to_register_deployment_to_dx }}
