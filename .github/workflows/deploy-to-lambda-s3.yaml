name: 'Deploy AWS Lambda'

on:
  workflow_call:
    inputs:
      lambda_function_name:
        description: "Lambda function name to be deployed"
        type: string
        required: true
      aws_account_region:
        description: "AWS account region"
        type: string
        required: false
        default: 'ap-southeast-1'
      aws_account_id:
        description: "AWS account Id"
        type: string
        required: true
      aws_iam_role_arn:
        description: "AWS ARN IAM Role ARN"
        type: string
        required: true
      s3_bucket:
        description: "AWS S3 bucket where the lambda zip file is stored"
        type: string
        required: true
      s3_key:
        description: "AWS S3 key for the lambda zip"
        type: string
        required: true
      lambda_architecture:
        description: "AWS Lambda architecture"
        default: 'x86_64'
        type: string
        required: false
      lambda_environment:
        description: "AWS Lambda comma Separate list of environment variable"
        type: string
        required: false
      working_directory:
        description: "Working Directory of the project"
        type: string
        required: true
      zip_file:
        type: string
        description: 'Zip File to deploy'
        required: true

jobs:
  deploy-lambda:
    name: Deploy Lambda
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-skip-session-tagging: true
        role-to-assume: ${{ inputs.aws_iam_role_arn }}
        role-session-name: gh-actions
        aws-region: ${{ inputs.aws_account_region }}

    - name: Deploy to Lambda
      working-directory: ${{ inputs.working_directory }}
      run: |
        aws lambda update-function-code --function-name ${{ inputs.lambda_function_name }} \
        --s3-bucket=${{inputs.s3_bucket}} --s3-key=${{inputs.s3_key}} \
        --architectures=${{inputs.lambda_architecture}} --region=${{inputs.aws_account_region}}

    - name: Update Lambda Environment Variables
      working-directory: ${{ inputs.working_directory }}
      run: |
       aws lambda update-function-configuration --function-name ${{ inputs.lambda_function_name }} \
       --environment "Variables={${{ inputs.lambda_environment }}}" --role ${{ inputs.aws_iam_role_arn }}
      if: ${{ inputs.lambda_environment != '' }}
